{"ast":null,"code":"import { takeEvery, put } from \"redux-saga/effects\";\nimport { PRODUCT_LIST, SEARCH_PRODUCT, SET_PRODUCT_LIST } from \"./constant\";\nfunction* getProducts() {\n  // let data = yield fetch('http://localhost:3500/products');\n  let data = [{\n    name: \"Product 10\",\n    id: 10,\n    quanty: 10\n  }, {\n    name: \"Product 11\",\n    id: 11,\n    quanty: 11\n  }, {\n    name: \"Product 14\",\n    id: 14,\n    quanty: 12\n  }];\n  data = yield data.json();\n  console.warn(\"action is called\", data);\n  yield put({\n    type: SET_PRODUCT_LIST,\n    data\n  });\n}\nfunction* searchProducts(data) {\n  let result = yield fetch(`http://localhost:3500/products?q=${data.query}`);\n  result = yield result.json();\n  console.warn(\"action is called\", result);\n  yield put({\n    type: SET_PRODUCT_LIST,\n    data: result\n  });\n}\nfunction* productSaga() {\n  yield takeEvery(PRODUCT_LIST, getProducts);\n  yield takeEvery(SEARCH_PRODUCT, searchProducts);\n}\nexport default productSaga;","map":{"version":3,"names":["takeEvery","put","PRODUCT_LIST","SEARCH_PRODUCT","SET_PRODUCT_LIST","getProducts","data","name","id","quanty","json","console","warn","type","searchProducts","result","fetch","query","productSaga"],"sources":["/home/codalien/akludo/src/redux/productSaga.js"],"sourcesContent":["import { takeEvery, put } from \"redux-saga/effects\";\nimport { PRODUCT_LIST, SEARCH_PRODUCT, SET_PRODUCT_LIST } from \"./constant\";\n\nfunction* getProducts() {\n  // let data = yield fetch('http://localhost:3500/products');\n  let data = [\n    { name: \"Product 10\", id: 10, quanty: 10 },\n    { name: \"Product 11\", id: 11, quanty: 11 },\n    { name: \"Product 14\", id: 14, quanty: 12 }\n  ];\n  data = yield data.json();\n  console.warn(\"action is called\", data);\n  yield put({ type: SET_PRODUCT_LIST, data });\n}\n\nfunction* searchProducts(data) {\n  let result = yield fetch(`http://localhost:3500/products?q=${data.query}`);\n  result = yield result.json();\n  console.warn(\"action is called\", result);\n  yield put({ type: SET_PRODUCT_LIST, data: result });\n}\n\nfunction* productSaga() {\n  yield takeEvery(PRODUCT_LIST, getProducts);\n  yield takeEvery(SEARCH_PRODUCT, searchProducts);\n}\n\nexport default productSaga;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;AACnD,SAASC,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,YAAY;AAE3E,UAAUC,WAAWA,CAAA,EAAG;EACtB;EACA,IAAIC,IAAI,GAAG,CACT;IAAEC,IAAI,EAAE,YAAY;IAAEC,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,EAC1C;IAAEF,IAAI,EAAE,YAAY;IAAEC,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,EAC1C;IAAEF,IAAI,EAAE,YAAY;IAAEC,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAC3C;EACDH,IAAI,GAAG,MAAMA,IAAI,CAACI,IAAI,EAAE;EACxBC,OAAO,CAACC,IAAI,CAAC,kBAAkB,EAAEN,IAAI,CAAC;EACtC,MAAML,GAAG,CAAC;IAAEY,IAAI,EAAET,gBAAgB;IAAEE;EAAK,CAAC,CAAC;AAC7C;AAEA,UAAUQ,cAAcA,CAACR,IAAI,EAAE;EAC7B,IAAIS,MAAM,GAAG,MAAMC,KAAK,CAAE,oCAAmCV,IAAI,CAACW,KAAM,EAAC,CAAC;EAC1EF,MAAM,GAAG,MAAMA,MAAM,CAACL,IAAI,EAAE;EAC5BC,OAAO,CAACC,IAAI,CAAC,kBAAkB,EAAEG,MAAM,CAAC;EACxC,MAAMd,GAAG,CAAC;IAAEY,IAAI,EAAET,gBAAgB;IAAEE,IAAI,EAAES;EAAO,CAAC,CAAC;AACrD;AAEA,UAAUG,WAAWA,CAAA,EAAG;EACtB,MAAMlB,SAAS,CAACE,YAAY,EAAEG,WAAW,CAAC;EAC1C,MAAML,SAAS,CAACG,cAAc,EAAEW,cAAc,CAAC;AACjD;AAEA,eAAeI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}