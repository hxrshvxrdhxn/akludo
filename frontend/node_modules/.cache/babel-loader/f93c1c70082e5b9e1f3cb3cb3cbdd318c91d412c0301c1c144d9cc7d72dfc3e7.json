{"ast":null,"code":"import { api } from '../../../services/api';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n//Mock option data for option component when data is not coming from api\nexport const getLoginToken = data => {\n  return new Promise(async (resolve, reject) => {\n    if (data.type === 'google') {\n      api.post(`api/authentication/register_user/`, data, {}).then(response => {\n        return resolve(response);\n      }).catch(error => {\n        console.log(33333);\n        console.log(error.message);\n        console.log(error);\n        return reject(error);\n      });\n    } else {\n      api.post(`api/authentication/authenticate_mpin/`, data, {}).then(response => {\n        var _data$data;\n        //console.log(\"hit log in\",response.data.data)\n        cookies.set('token', (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.token);\n        return resolve(response);\n      }).catch(error => {\n        return reject(error);\n      });\n    }\n  });\n};","map":{"version":3,"names":["api","Cookies","cookies","getLoginToken","data","Promise","resolve","reject","type","post","then","response","catch","error","console","log","message","_data$data","set","token"],"sources":["/home/codalien/akludo/src/store/modules/auth/api.js"],"sourcesContent":["import { api } from '../../../services/api'\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies();\n\n//Mock option data for option component when data is not coming from api\nexport const getLoginToken = data => {return new Promise(async(resolve, reject) => {\n        if (data.type === 'google') {\n            api.post(`api/authentication/register_user/`, data, {})\n            .then((response) => {\n              \n              return resolve(response);\n            })\n            .catch((error) => {\n              console.log(33333)\n              console.log(error.message)\n              console.log(error)\n              return reject(error);\n            });\n        } else {\n            api.post(`api/authentication/authenticate_mpin/`, data, {})\n            .then((response) => {\n              //console.log(\"hit log in\",response.data.data)\n              cookies.set('token', data.data?.token);\n              return resolve(response);\n            })\n            .catch((error) => {\n              return reject(error);\n            });\n        }\n      });\n    }"],"mappings":"AAAA,SAASA,GAAG,QAAQ,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,MAAMC,OAAO,GAAG,IAAID,OAAO,EAAE;;AAE7B;AACA,OAAO,MAAME,aAAa,GAAGC,IAAI,IAAI;EAAC,OAAO,IAAIC,OAAO,CAAC,OAAMC,OAAO,EAAEC,MAAM,KAAK;IAC3E,IAAIH,IAAI,CAACI,IAAI,KAAK,QAAQ,EAAE;MACxBR,GAAG,CAACS,IAAI,CAAE,mCAAkC,EAAEL,IAAI,EAAE,CAAC,CAAC,CAAC,CACtDM,IAAI,CAAEC,QAAQ,IAAK;QAElB,OAAOL,OAAO,CAACK,QAAQ,CAAC;MAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAClBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;QAC1BF,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,OAAON,MAAM,CAACM,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MACHb,GAAG,CAACS,IAAI,CAAE,uCAAsC,EAAEL,IAAI,EAAE,CAAC,CAAC,CAAC,CAC1DM,IAAI,CAAEC,QAAQ,IAAK;QAAA,IAAAM,UAAA;QAClB;QACAf,OAAO,CAACgB,GAAG,CAAC,OAAO,GAAAD,UAAA,GAAEb,IAAI,CAACA,IAAI,cAAAa,UAAA,uBAATA,UAAA,CAAWE,KAAK,CAAC;QACtC,OAAOb,OAAO,CAACK,QAAQ,CAAC;MAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB,OAAON,MAAM,CAACM,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}