{"ast":null,"code":"import { api } from '../../../services/api';\nimport { postData } from '../../../services/api';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n//Mock option data for option component when data is not coming from api\nexport const getUserData = data => new Promise(async (resolve, reject) => {\n  api.get(`api/general_user_details/`, {\n    headers: {\n      'Authorization': 'Token ' + data.token\n    }\n  }).then(response => {\n    return resolve(response);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      cookies.remove('token', {\n        path: '/'\n      });\n    }\n    return reject(error);\n  });\n});\nexport const getUserGeneralDetails = data => {\n  return new Promise(async (resolve, reject) => {\n    postData({\n      endPoint: 'api/general_input/',\n      token: data.token,\n      payload: data.payload\n    }).then(response => {\n      return resolve(response);\n    }).catch(error => {\n      return reject(error);\n    });\n  });\n};","map":{"version":3,"names":["api","postData","Cookies","cookies","getUserData","data","Promise","resolve","reject","get","headers","token","then","response","catch","error","status","remove","path","getUserGeneralDetails","endPoint","payload"],"sources":["/home/codalien/akludo/src/store/modules/userDetails/api.js"],"sourcesContent":["import { api } from '../../../services/api'\nimport {postData} from '../../../services/api'\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies()\n\n//Mock option data for option component when data is not coming from api\nexport const getUserData = data => new Promise(async (resolve, reject) => {\n  api.get(`api/general_user_details/`, { headers: { 'Authorization': 'Token ' + data.token } })\n    .then((response) => {\n     \n      return resolve(response);\n    })\n    .catch((error) => {\n      \n      if(error.response.status===401)\n      {\n        \n        cookies.remove('token', { path: '/' })\n    \n      }\n      return reject(error);\n    });\n});\n\nexport const getUserGeneralDetails = data => {return new Promise(async (resolve, reject) => {\n  postData({endPoint:'api/general_input/', token:data.token, payload:data.payload}).then((response) => {\n    return resolve(response)\n  }).catch((error) => {\n    return reject(error)\n  })\n})}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,uBAAuB;AAC3C,SAAQC,QAAQ,QAAO,uBAAuB;AAC9C,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,MAAMC,OAAO,GAAG,IAAID,OAAO,EAAE;;AAE7B;AACA,OAAO,MAAME,WAAW,GAAGC,IAAI,IAAI,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;EACxER,GAAG,CAACS,GAAG,CAAE,2BAA0B,EAAE;IAAEC,OAAO,EAAE;MAAE,eAAe,EAAE,QAAQ,GAAGL,IAAI,CAACM;IAAM;EAAE,CAAC,CAAC,CAC1FC,IAAI,CAAEC,QAAQ,IAAK;IAElB,OAAON,OAAO,CAACM,QAAQ,CAAC;EAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAEhB,IAAGA,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAG,GAAG,EAC9B;MAEEb,OAAO,CAACc,MAAM,CAAC,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAI,CAAC,CAAC;IAExC;IACA,OAAOV,MAAM,CAACO,KAAK,CAAC;EACtB,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,OAAO,MAAMI,qBAAqB,GAAGd,IAAI,IAAI;EAAC,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC1FP,QAAQ,CAAC;MAACmB,QAAQ,EAAC,oBAAoB;MAAET,KAAK,EAACN,IAAI,CAACM,KAAK;MAAEU,OAAO,EAAChB,IAAI,CAACgB;IAAO,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAK;MACnG,OAAON,OAAO,CAACM,QAAQ,CAAC;IAC1B,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAClB,OAAOP,MAAM,CAACO,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}