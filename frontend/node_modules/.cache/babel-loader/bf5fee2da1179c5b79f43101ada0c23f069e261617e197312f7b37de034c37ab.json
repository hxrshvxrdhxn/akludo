{"ast":null,"code":"import axios from 'axios';\nimport { API_ENDPOINT } from '../constant';\n\n// configuring axios\nexport const api = axios.create({\n  baseURL: API_ENDPOINT\n});\nexport const postData = data => {\n  return new Promise(async (resolve, reject) => {\n    api.post(data.endPoint, data.payload, {\n      headers: {\n        'Authorization': 'Token ' + data.token\n      }\n    }).then(response => {\n      return resolve(response);\n    }).catch(error => {\n      if (error.message === 'Request failed with status code 401') {\n        // NavigationService.navigate('MobileNumber', {});\n      } else {\n        return reject(error);\n      }\n    });\n  });\n};\nexport async function getData(data) {\n  // return new Promise(async (resolve, reject) => {\n  const dataget = await api.post(data.endPoint, {\n    s3_path: data.payload\n  }, {\n    headers: {\n      'Authorization': 'Token ' + data.token\n    }\n  });\n  console.log(\"eeeeee\", dataget);\n  return dataget;\n}\nexport const postS3 = data => {\n  return new Promise(async (resolve, reject) => {\n    var _data$presignedPostDa;\n    console.log(\"eeeeeeeeeeeeeee\");\n    console.log(data);\n    const formData = new FormData();\n    Object.keys((_data$presignedPostDa = data.presignedPostData) === null || _data$presignedPostDa === void 0 ? void 0 : _data$presignedPostDa.fields).forEach(key => {\n      var _data$presignedPostDa2;\n      formData.append(key, (_data$presignedPostDa2 = data.presignedPostData) === null || _data$presignedPostDa2 === void 0 ? void 0 : _data$presignedPostDa2.fields[key]);\n    });\n    formData.append(\"file\", data.res);\n    api.post(data.presignedPostData.url, formData, {}).then(response => {\n      console.log(\"response s3\", response);\n      return resolve(response);\n    }).catch(error => {\n      console.log(123456, error);\n      if (error.message === 'Request failed with status code 401') {} else {\n        console.log(123456);\n        return reject(error);\n      }\n    });\n  });\n};\nexport async function getS3SignedUrl(data) {\n  const dataS3 = await getData({\n    endPoint: 'api/upload_to_s3/',\n    token: data.token,\n    payload: data.payload.s3_path\n  });\n  console.log(222222, dataS3);\n  return dataS3;\n}","map":{"version":3,"names":["axios","API_ENDPOINT","api","create","baseURL","postData","data","Promise","resolve","reject","post","endPoint","payload","headers","token","then","response","catch","error","message","getData","dataget","s3_path","console","log","postS3","_data$presignedPostDa","formData","FormData","Object","keys","presignedPostData","fields","forEach","key","_data$presignedPostDa2","append","res","url","getS3SignedUrl","dataS3"],"sources":["/home/codalien/akludo/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { API_ENDPOINT } from '../constant'\n\n\n// configuring axios\nexport const api = axios.create({\n  baseURL: API_ENDPOINT,\n});\n\nexport const postData = data => {\n  return new Promise(async (resolve, reject) => {\n    api.post(data.endPoint, data.payload, { headers: { 'Authorization': 'Token ' + data.token } })\n      .then((response) => {\n        return resolve(response);\n      })\n      .catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          // NavigationService.navigate('MobileNumber', {});\n        } else {\n          return reject(error);\n        }\n      });\n  })\n};\n\n\nexport async function getData(data) {\n  // return new Promise(async (resolve, reject) => {\n  const dataget = await api.post(data.endPoint, { s3_path: data.payload }, { headers: { 'Authorization': 'Token ' + data.token } })\n  console.log(\"eeeeee\", dataget)\n  return dataget\n}\n\nexport const postS3 = (data) => {\n  return new Promise(async (resolve, reject) => {\n    console.log(\"eeeeeeeeeeeeeee\")\n    console.log(data)\n    const formData = new FormData();\n    Object.keys(data.presignedPostData?.fields).forEach(key => {\n      formData.append(key, data.presignedPostData?.fields[key]);\n    });\n    formData.append(\"file\", data.res);\n    api.post(data.presignedPostData.url, formData, {}).then((response) => {\n      console.log(\"response s3\", response)\n      return resolve(response);\n    })\n      .catch((error) => {\n        console.log(123456, error)\n        if (error.message === 'Request failed with status code 401') {\n        } else {\n          console.log(123456)\n          return reject(error);\n        }\n      });\n  })\n};\n\n\nexport async function getS3SignedUrl(data) {\n  const dataS3 = await getData({ endPoint: 'api/upload_to_s3/', token: data.token, payload: data.payload.s3_path })\n  console.log(222222, dataS3)\n  return dataS3\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}